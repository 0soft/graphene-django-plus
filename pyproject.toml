[tool.poetry]
name = "graphene-django-plus"
version = "2.4.7"
description = "Tools to easily create permissioned CRUD endpoints in graphene."
authors = ["Thiago Bellini Ribeiro <thiago@bellini.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/0soft/graphene-django-plus"
repository = "https://github.com/0soft/graphene-django-plus"
documentation = "https://graphene-django-plus.readthedocs.io"
keywords = ["graphene", "django", "graphql", "crud", "permissions"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Framework :: Django",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
]
packages = [{include = "graphene_django_plus"}]

[tool.poetry.dependencies]
python = "^3.7"

[tool.poetry.dev-dependencies]
sphinx = {version = "^3", optional = true}
sphinx-rtd-theme = {version = "^0.5.2", optional = true}
pytest = "^6.2.3"
pytest-cov = "^2.11.1"
pytest-django = "^4.2.0"
mock = "^4.0.3"
codecov = "^2.1.11"
django-filter = "^2.4.0"
django-guardian = "^2.3.0"
graphene-django-optimizer = "^0.8.0"
graphene-django = "^2.15.0"
graphene = "^2.1.8"
graphql-core = "~2"
black = "^21.5b1"
flake8 = "^3.9.1"
pynvim = "^0.4.3"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme"]

[tool.black]
line-length = 100
target-version = ['py37', 'py38']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = "tests/test_*.py"
django_find_projects = false
addopts = "--cov=./ -vv"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
